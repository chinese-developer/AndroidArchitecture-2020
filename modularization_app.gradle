apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply from: '../test_dependencies.gradle'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

androidExtensions {
    experimental = true
}

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildToolsVersion

    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
            storeFile rootProject.file(releaseKeyFileName)
            storePassword releaseKeyPassword
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.example.architecture.${project.name.toLowerCase()}"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        resConfigs "zh" // 只需要中文资源

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    testOptions { unitTests.returnDefaultValues = true }

    dexOptions {
        // jumboMode = true 忽略方法数限制（这样做的缺点是apk无法在低版本的设备上安装，会出现错误：INSTALL_FAILED_DEXOPT），如果APP只兼容到19则不会有影响
        javaMaxHeapSize "4g"
    }

    buildTypes {
        // 测试
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            manifestPlaceholders = [screenOrientation: "unspecified"]
        }

        // 正式发布
        release {
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}-${variant.versionName}.apk"
        }
    }
}

dependencies {
    // 基础类库
    implementation project(':module_base')

    /*Dagger Hilt*/
    implementation "com.google.dagger:hilt-android:${versions.dagger}"
    implementation "androidx.hilt:hilt-common:${versions.dagger_hilt}"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${versions.dagger_hilt}"
    kapt "androidx.hilt:hilt-compiler:${versions.dagger_hilt}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.dagger}"
    /*ARouter*/
    kapt "com.alibaba:arouter-compiler:${versions.arouterAnnotation}"
    /*MoShi*/
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"
    /* all jar*/
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
